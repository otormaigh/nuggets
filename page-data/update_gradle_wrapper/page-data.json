{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/update_gradle_wrapper/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Update Gradle Wrapper\",\n  \"tags\": [\"gradle\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When updating the Gradle version on a project, always run the Gradle Wrapper task to make sure all relevant files are updated. You can either add a preconfigured block within the project to set the version number, or optionally manually add the version to the gradle task params.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Without project configuration block\\nRun this command: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./gradlew wrapper --gradle-version=6.5\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"With project configuration block\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"wrapper {\\n  gradleVersion = \\\"6.5\\\"\\n  distributionType = \\\"all\\\"\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle.kts\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"tasks.withType(Wrapper::class.java) {\\n  gradleVersion = \\\"6.5\\\"\\n  distributionType = Wrapper.DistributionType.ALL\\n}\\n\")), mdx(\"p\", null, \"Run this command: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./gradlew wrapper\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Update Gradle Wrapper","tags":["gradle"],"emoji":null,"link":null},"fields":{"dateModified":"14th Jun 2020","slug":"/update_gradle_wrapper/"},"tableOfContents":{},"parent":{"__typename":"File","name":"update_gradle_wrapper","fileName":"update_gradle_wrapper.md"}}},"pageContext":{"id":"302799fe-fc29-5175-9318-4ddc796ac95c","previous":null,"next":{"id":"2e3cfcbb-86ee-52b6-a592-020aff313069","frontmatter":{"title":"Set Local Git user config","tags":["git"]},"fields":{"slug":"/set_local_git_user_config/"}},"hasUntagged":false,"basePath":"/"}}}